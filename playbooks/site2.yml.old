---
- name: Cluster prep
  hosts: k3s_cluster
  gather_facts: true
  become: true
  roles:
    - role: prereq
    - role: airgap
    - role: raspberrypi

- name: Setup K3S server
  hosts: server
  become: true
  roles:
    - role: k3s_server

- name: Setup K3S agent
  hosts: agent
  become: true
  roles:
    - role: k3s_agent

- name: Install and configure Rancher (only on master nodes)
  hosts: server
  become: true
  tasks:
    - name: Ensure Helm is installed
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Add Rancher repository and update Helm
      shell: |
        helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
        helm repo update

    - name: Check if Rancher release exists
      shell: helm list -n cattle-system | grep -w '^rancher'
      register: rancher_release_check
      ignore_errors: yes
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Uninstall existing Rancher release if found
      shell: helm uninstall rancher -n cattle-system
      when: rancher_release_check.rc == 0
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Delete cattle-system namespace if still present
      command: kubectl delete namespace cattle-system --ignore-not-found
      when: rancher_release_check.rc == 0
      ignore_errors: yes

    - name: Wait for cattle-system namespace to be fully deleted
      shell: |
        while kubectl get namespace cattle-system; do sleep 5; done
      when: rancher_release_check.rc == 0
      retries: 10
      delay: 10

    - name: Create cattle-system namespace
      command: kubectl create namespace cattle-system
      ignore_errors: yes

    - name: Install cert-manager
      shell: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml
      args:
        creates: /var/lib/rancher/cert-manager-installed

    - name: Wait for cert-manager to be running
      shell: kubectl rollout status deployment/cert-manager -n cert-manager --timeout=300s
      retries: 5
      delay: 30

    - name: Install Rancher using Helm
      shell: |
        helm install rancher rancher-stable/rancher \
          --namespace cattle-system \
          --set hostname={{ rancher_hostname }}
          --set tls=external
          --set bootstrapPassword={{ bootstrappassword }}
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config
      args:
        creates: /var/lib/rancher/rancher-installed

    - name: Verify Rancher deployment status
      shell: kubectl -n cattle-system get deploy rancher -o jsonpath="{.status.conditions[?(@.type=='Available')].status}"
      register: rancher_status
      retries: 5
      delay: 60
      until: rancher_status.stdout == "True"

